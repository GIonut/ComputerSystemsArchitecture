     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; Read contents from a file until there's nothing left and print it on the console
     7                                  
     8                                  ; declare external functions needed by our program
     9                                  extern exit, printf, scanf, fopen, fscanf, fclose
    10                                  import exit msvcrt.dll
    11                                  import printf msvcrt.dll
    12                                  import scanf msvcrt.dll
    13                                  import fopen msvcrt.dll
    14                                  import fscanf msvcrt.dll
    15                                  import fclose msvcrt.dll
    16                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    17                                  
    18                                  ; our data is declared here (the variables needed by our program)
    19                                  segment data use32 class=data
    20 00000000 74656D61312E747874-         f_name db "tema1.txt", 0
    20 00000009 00                 
    21 0000000A FFFFFFFF                    handle dd -1
    22 0000000E 7200                        f_acces db "r", 0
    23 00000010 4E756D6172756C2064-         format db "Numarul de cifre pare este: %d", 0
    23 00000019 652063696672652070-
    23 00000022 61726520657374653A-
    23 0000002B 20256400           
    24 0000002F 256400                      format_2 db "%d", 0
    25 00000032 00000000                    contor dd 0
    26 00000036 00000000                    a dd 0
    27                                  ; our code starts here
    28                                  segment code use32 class=code
    29                                      start:
    30                                      ;deschid fisierul
    31 00000000 68[0E000000]                    push dword f_acces
    32 00000005 68[00000000]                    push dword f_name
    33 0000000A FF15[00000000]                  call [fopen]
    34 00000010 83C408                          add esp, 4*2
    35                                  
    36 00000013 A3[0A000000]                    mov [handle], eax
    37                                  
    38 00000018 83F800                          cmp eax, 0
    39 0000001B 7456                            je final
    40                                          ;citim din fisier
    41                                       reading:
    42 0000001D 68[36000000]                    push dword a
    43 00000022 68[2F000000]                    push dword format_2
    44 00000027 FF35[0A000000]                  push dword[handle]
    45 0000002D FF15[00000000]                  call [fscanf]
    46                                          
    47 00000033 83C40C                          add esp,4*3
    48                                          
    49 00000036 83F8FF                          cmp eax,-1
    50 00000039 7415                            je eof
    51 0000003B A1[36000000]                    mov eax,[a]
    52 00000040 83E001                          and eax,01h;verif daca e par
    53 00000043 83F800                          cmp eax,0
    54 00000046 7506                            jne impar
    55 00000048 FF05[32000000]                  inc dword[contor]
    56                                          impar:
    57 0000004E EBCD                            jmp reading
    58                                          eof:
    59                                          ;afisare
    60 00000050 FF35[32000000]                  push dword[contor]
    61 00000056 68[2F000000]                    push format_2
    62 0000005B FF15[00000000]                  call [printf]
    63 00000061 83C408                          add esp,4*2
    64                                          ;inchidere fisier
    65 00000064 FF35[0A000000]                  push dword[handle]
    66 0000006A FF15[00000000]                  call [fclose]
    67 00000070 83C404                          add esp,4*1
    68                                    
    69                                          final:
    70                                    
    71                                          ; exit(0)
    72 00000073 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    73 00000075 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
