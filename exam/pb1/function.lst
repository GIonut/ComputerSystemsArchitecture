     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                        
     3                                  global function
     4                                  segment data use32 class=data public
     5                                      ; ...
     6 00000000 00000000                    maxval dd 0
     7 00000004 00000000                    maxstart dd 0
     8                                      
     9                                  segment code use32 class=code public
    10                                     function:
    11                                          ; ...
    12 00000000 8B742404                        mov esi, [esp + 4]
    13 00000004 B800000000                      mov eax, 0
    14 00000009 BB00000000                      mov ebx, 0
    15 0000000E 89F1                            mov ecx, esi
    16                                          .repeat1:
    17 00000010 803E00                              cmp byte[esi], 0
    18 00000013 7429                                je .endloop1
    19                                              
    20 00000015 F60601                              test byte[esi], 1
    21 00000018 7520                                jnz .odd
    22 0000001A 3B05[00000000]                          cmp eax, [maxval]
    23 00000020 720B                                    jb .notmax
    24 00000022 A3[00000000]                                mov [maxval], eax
    25 00000027 891D[04000000]                              mov [maxstart], ebx
    26                                                  .notmax:
    27 0000002D 8D5E01                                  lea ebx, [esi+1]
    28 00000030 29CB                                    sub ebx, ecx
    29 00000032 B800000000                              mov eax, 0
    30 00000037 46                                      inc esi
    31 00000038 EBD6                                    jmp .repeat1
    32                                              .odd:
    33                                              
    34 0000003A 40                                  inc eax
    35 0000003B 46                                  inc esi
    36 0000003C EBD2                            jmp .repeat1
    37                                          .endloop1:
    38                                  
    39 0000003E C20400                          ret 4
